
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  role_id: 'role_id',
  is_active: 'is_active',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BrandsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ModelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  brand_id: 'brand_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VariantsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  model_id: 'model_id',
  brand_id: 'brand_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StatesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CitiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  stateId: 'stateId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Checklist_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Checklist_optionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category_id: 'category_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  registration_number: 'registration_number',
  owner_name: 'owner_name',
  insurance_company: 'insurance_company',
  insurance_number: 'insurance_number',
  chassis_number: 'chassis_number',
  rc_image: 'rc_image',
  insurance_image: 'insurance_image',
  brand_id: 'brand_id',
  model_id: 'model_id',
  variant_id: 'variant_id',
  kms_driven: 'kms_driven',
  color: 'color',
  mileage: 'mileage',
  engine_capacity: 'engine_capacity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_featuresScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  feature_name: 'feature_name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_imagesScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  image_url: 'image_url',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_availabilityScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  start_time: 'start_time',
  end_time: 'end_time',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_availability_historyScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  start_time: 'start_time',
  end_time: 'end_time',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_inspectionScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  inspection_date: 'inspection_date',
  inspector_name: 'inspector_name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vehicle_bookingsId: 'vehicle_bookingsId'
};

exports.Prisma.Vehicle_inspection_detailsScalarFieldEnum = {
  id: 'id',
  checklist_option_id: 'checklist_option_id',
  rating: 'rating',
  description: 'description',
  vehicle_inspection_id: 'vehicle_inspection_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_pricesScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  base_price_per_day: 'base_price_per_day',
  hr_included: 'hr_included',
  km_included: 'km_included',
  extra_km_charge: 'extra_km_charge',
  extra_hr_charge: 'extra_hr_charge',
  is_unlimited_allowed: 'is_unlimited_allowed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email_id: 'email_id',
  mobile_number: 'mobile_number',
  alternate_mobile_number: 'alternate_mobile_number',
  address: 'address',
  city_id: 'city_id',
  state_id: 'state_id',
  pin_code: 'pin_code',
  adhaar_number: 'adhaar_number',
  adhar_front_image: 'adhar_front_image',
  adhar_back_image: 'adhar_back_image',
  driving_license_number: 'driving_license_number',
  driving_license_front_image: 'driving_license_front_image',
  driving_license_back_image: 'driving_license_back_image',
  profile_image: 'profile_image',
  is_active: 'is_active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProvidersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email_id: 'email_id',
  mobile_number: 'mobile_number',
  alternate_mobile_number: 'alternate_mobile_number',
  address: 'address',
  cityId: 'cityId',
  stateId: 'stateId',
  pin_code: 'pin_code',
  adhaar_number: 'adhaar_number',
  adhar_front_image: 'adhar_front_image',
  adhar_back_image: 'adhar_back_image',
  pan_number: 'pan_number',
  pan_image: 'pan_image',
  profile_image: 'profile_image',
  is_approved: 'is_approved',
  is_active: 'is_active',
  rejection_reason: 'rejection_reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_bookingsScalarFieldEnum = {
  id: 'id',
  booking_number: 'booking_number',
  vehicle_id: 'vehicle_id',
  customer_id: 'customer_id',
  start_time: 'start_time',
  end_time: 'end_time',
  booking_status_id: 'booking_status_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_bookings_logsScalarFieldEnum = {
  id: 'id',
  vehicle_id: 'vehicle_id',
  vehicle_booking_id: 'vehicle_booking_id',
  booking_number: 'booking_number',
  start_time: 'start_time',
  end_time: 'end_time',
  customer_id: 'customer_id',
  booking_status_id: 'booking_status_id',
  logged_time: 'logged_time',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Vehicle_bookings_billsScalarFieldEnum = {
  id: 'id',
  vehicle_booking_id: 'vehicle_booking_id',
  base_price: 'base_price',
  vehicle_price_id: 'vehicle_price_id',
  total_price: 'total_price',
  extra_km_charge: 'extra_km_charge',
  extra_hr_charge: 'extra_hr_charge',
  customer_id: 'customer_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Bills_paymentScalarFieldEnum = {
  id: 'id',
  bill_id: 'bill_id',
  amount: 'amount',
  payment_method: 'payment_method',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.role = exports.$Enums.role = {
  ADMIN: 'ADMIN',
  HOSTER: 'HOSTER',
  CUSTOMER: 'CUSTOMER'
};

exports.Prisma.ModelName = {
  users: 'users',
  brands: 'brands',
  models: 'models',
  variants: 'variants',
  states: 'states',
  cities: 'cities',
  checklist_categories: 'checklist_categories',
  checklist_options: 'checklist_options',
  vehicle: 'vehicle',
  vehicle_features: 'vehicle_features',
  vehicle_images: 'vehicle_images',
  vehicle_availability: 'vehicle_availability',
  vehicle_availability_history: 'vehicle_availability_history',
  vehicle_inspection: 'vehicle_inspection',
  vehicle_inspection_details: 'vehicle_inspection_details',
  vehicle_prices: 'vehicle_prices',
  customer: 'customer',
  providers: 'providers',
  vehicle_bookings: 'vehicle_bookings',
  vehicle_bookings_logs: 'vehicle_bookings_logs',
  vehicle_bookings_bills: 'vehicle_bookings_bills',
  bills_payment: 'bills_payment'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
