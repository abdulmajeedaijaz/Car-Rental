
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  role: 'role',
  is_active: 'is_active',
  password: 'password',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BrandsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ModelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  brandId: 'brandId',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VariantsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  modelId: 'modelId',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StatesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CitiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  stateId: 'stateId',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Checklist_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Checklist_optionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  craetedAt: 'craetedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  HOSTER: 'HOSTER',
  CUSTOMER: 'CUSTOMER'
};

exports.Prisma.ModelName = {
  user: 'user',
  brands: 'brands',
  models: 'models',
  variants: 'variants',
  states: 'states',
  cities: 'cities',
  checklist_categories: 'checklist_categories',
  checklist_options: 'checklist_options'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\shaik\\OneDrive\\Desktop\\Car-Rental-main\\Car-Rental-main\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\shaik\\OneDrive\\Desktop\\Car-Rental-main\\Car-Rental-main\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  HOSTER\n  CUSTOMER\n}\n\nmodel user {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  username  String   @unique\n  role      Role\n  is_active Boolean  @default(true)\n  password  String\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel brands {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  models    models[]\n}\n\nmodel models {\n  id        String     @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  brand     brands     @relation(fields: [brandId], references: [id])\n  brandId   String     @db.ObjectId\n  craetedAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  variants  variants[]\n}\n\nmodel variants {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  model     models   @relation(fields: [modelId], references: [id])\n  modelId   String   @db.ObjectId\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel states {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  cities    cities[]\n}\n\nmodel cities {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  state     states   @relation(fields: [stateId], references: [id])\n  stateId   String   @db.ObjectId\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel checklist_categories {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel checklist_options {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name      String\n  craetedAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "6a012553781ce03f7b815d60eda6520a52e529c5d0834688fd2a358c359cdcb4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"brands\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"models\",\"kind\":\"object\",\"type\":\"models\",\"relationName\":\"brandsTomodels\"}],\"dbName\":null},\"models\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTomodels\"},{\"name\":\"brandId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"variants\",\"relationName\":\"modelsTovariants\"}],\"dbName\":null},\"variants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"object\",\"type\":\"models\",\"relationName\":\"modelsTovariants\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"states\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"cities\",\"relationName\":\"citiesTostates\"}],\"dbName\":null},\"cities\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"states\",\"relationName\":\"citiesTostates\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"checklist_categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"checklist_options\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"craetedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

